q 1 ) 
using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        a=int[] nums = new nums[4];
        console.WriteLine("enter your array :");
        console.ReadLine(a);
        int i=0;
        for(i=0,i<=4,i++)
        {
            if(a[i]==a[]){
                console.writeline("true");
            }
            else
            {
                console.writeline("false");
            }
        }
    }
}

q 7)
using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        int[] arr={21 ,43 ,22 ,67 ,43 ,12, 4};
            int j = array.length -1;

    for (int i = 0 ; i < middle; i++) {
        temp = array[i];
        array[i] = array[j];
        array[j] = temp;
        j--;

    }
}

q )
using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        public class Comparer : IComparer<KeyValuePair<int, int> > {
	public int Compare(KeyValuePair<int, int> p2,
					KeyValuePair<int, int> p1)
	{

		if (p1.Value == p2.Value)
			return p1.Key.CompareTo(p2.Key);
		return p1.Value.CompareTo(p2.Value);
	}
}

public class KFrequentNumbers {
	static void print_N_mostFrequentNumber(int[] arr, int N,
										int K)
	{

		IDictionary<int, int> mp
			= new Dictionary<int, int>();

		for (int i = 0; i < N; i++) {

			if (mp.ContainsKey(arr[i]))
				mp[arr[i]] += 1;
			else
				mp[arr[i]] = 1;
		}

		List<KeyValuePair<int, int> > list
			= new List<KeyValuePair<int, int> >();
		foreach(KeyValuePair<int, int> entry in mp)
		{
			list.Add(entry);
		}
		Comparer compare = new Comparer();
		list.Sort(compare);

		for (int i = 0; i < K; i++)
			Console.Write(list[i].Key + " ");
	}

	public static void Main(string[] args)
	{
		int[] arr = {1,1,1,2,2,3};
		int N = arr.Length;
		int K = 2;

		Console.Write(K + " elements with most occurrences are:\n");
		print_N_mostFrequentNumber(arr, N, K);
	}
}
    }
}

q)
using System;

public class HelloWorld
{
    public static void Main(string[] args)
    {
        class Solution:
    def twoSum(self, nums, target):
        dic = {}
        for
            try:
                dic[nums[i]].append(i)
            except:
                dic[nums[i]] = []
                dic[nums[i]].append(i)

        try:
            for items_1 in dic[nums[i]]:
                for items_2 in dic[target-nums[i]]:
                    if(items_1+1 != items_2+1):
                        l = []
                        if(items_2+1 > items_1+1):
                            l.append(items_1+1)
                            l.append(items_2+1)
                        else:
                            l.append(items_2+1)
                            l.append(items_1+1)
                        return l
        except:
    }
}

q)
